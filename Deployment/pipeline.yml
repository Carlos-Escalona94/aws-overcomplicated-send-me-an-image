AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Parameters:
  ARTIFACTSBUCKET: 
    Description: Required. Unique bucket name for deploy
    Type: String


Resources:

  Repository:
    Type: AWS::CodeCommit::Repository
    Properties: 
      RepositoryDescription: Repositorio para o projeto de data collection no clickup
      RepositoryName: send-me-an-image-repo

  S3ArtifactsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref ARTIFACTSBUCKET

  BuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: send-me-an-image-build
      Artifacts: 
        Type: CODEPIPELINE
      ConcurrentBuildLimit: 1
      Description: Projeto de build
      Environment: 
          ComputeType: BUILD_GENERAL1_SMALL
          Image: aws/codebuild/standard:4.0
          ImagePullCredentialsType: CODEBUILD
          Type: LINUX_CONTAINER
      ServiceRole: !GetAtt CodeBuildServiceAdministratorRole.Arn
      Source: 
        BuildSpec: ./Deployment/buildspec.yml
        GitCloneDepth: 1
        SourceIdentifier: source_codepipe
        Type: CODEPIPELINE
      TimeoutInMinutes: 20

  DeployProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: send-me-an-image-deploy
      Artifacts: 
        Type: CODEPIPELINE
      ConcurrentBuildLimit: 1
      Description: Projeto de build
      Environment: 
          ComputeType: BUILD_GENERAL1_SMALL
          Image: aws/codebuild/standard:4.0
          ImagePullCredentialsType: CODEBUILD
          Type: LINUX_CONTAINER
      ServiceRole: !GetAtt CodeBuildServiceAdministratorRole.Arn
      Source: 
        BuildSpec: ./Deployment/buildspec-deploy.yml
        GitCloneDepth: 1
        SourceIdentifier: source_codepipe
        Type: CODEPIPELINE
      TimeoutInMinutes: 20

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties: 
      ArtifactStore: 
        Type: S3
        Location: !Ref S3ArtifactsBucket
      Name: send-me-an-image-pipeline
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      Stages: 
        - Actions:
            - OutputArtifacts:
                - Name: SourceArtifact
              Name: source
              Configuration:
                RepositoryName: send-me-an-image-repo
                BranchName: master
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeCommit
                Version: '1'
              RunOrder: 1
          Name: Source
        - Actions:
            - InputArtifacts:
                - Name: SourceArtifact
              OutputArtifacts:
                - Name: BuildArtifact
              Name: build
              Configuration:
                ProjectName: send-me-an-image-build
                BatchEnabled: false
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              RunOrder: 1
          Name: Build
        - Actions:
            - InputArtifacts:
                - Name: BuildArtifact
              Name: deploy
              Configuration:
                ProjectName: send-me-an-image-deploy
                BatchEnabled: false
              ActionTypeId:
                Category: Build #Deploy not available for region = sa-east-1
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              RunOrder: 1
          Name: Deploy

  CodePipelineServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: AWS-CodePipeline-Service-Sinex-Permissions
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'codecommit:CancelUploadArchive'
                  - 'codecommit:GetBranch'
                  - 'codecommit:GetCommit'
                  - 'codecommit:GetUploadArchiveStatus'
                  - 'codecommit:UploadArchive'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'codedeploy:CreateDeployment'
                  - 'codedeploy:GetApplicationRevision'
                  - 'codedeploy:GetDeployment'
                  - 'codedeploy:GetDeploymentConfig'
                  - 'codedeploy:RegisterApplicationRevision'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'codebuild:*'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'devicefarm:ListProjects'
                  - 'devicefarm:ListDevicePools'
                  - 'devicefarm:GetRun'
                  - 'devicefarm:GetUpload'
                  - 'devicefarm:CreateUpload'
                  - 'devicefarm:ScheduleRun'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'lambda:*'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'iam:PassRole'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'elasticbeanstalk:*'
                  - 'ec2:*'
                  - 'elasticloadbalancing:*'
                  - 'autoscaling:*'
                  - 'cloudwatch:*'
                  - 's3:*'
                  - 'sns:*'
                  - 'cloudformation:*'
                  - 'rds:*'
                  - 'sqs:*'
                  - 'ecs:*'
                Resource: '*'

  CodeBuildServiceAdministratorRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess